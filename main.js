// Global variables
let currentSlide = 0;
let currentSlideIndex = 0;
const slides = document.querySelectorAll(".slide");
const totalSlides = slides.length;
let currentQuizQuestion = 0;
let quizAnswers = [];
let selectedAnswer = null;
let currentBankAccount = null;

// Quiz questions
const quizQuestions = [
	{
		question: "Qual √© a principal fun√ß√£o de um construtor?",
		options: [
			"A) Destruir objetos da mem√≥ria",
			"B) Inicializar os atributos de um objeto",
			"C) Criar m√©todos est√°ticos",
			"D) Definir heran√ßa entre classes",
		],
		correct: 1,
	},
	{
		question: "Qual modificador de acesso oferece maior prote√ß√£o?",
		options: ["A) public", "B) protected", "C) private", "D) default"],
		correct: 2,
	},
	{
		question: "O que √© sobrecarga de construtores?",
		options: [
			"A) Ter m√∫ltiplos construtores com diferentes par√¢metros",
			"B) Usar heran√ßa para criar construtores",
			"C) Chamar construtores de outras classes",
			"D) Criar construtores est√°ticos",
		],
		correct: 0,
	},
	{
		question: "Para que servem os m√©todos getter?",
		options: [
			"A) Modificar atributos privados",
			"B) Acessar atributos privados de forma controlada",
			"C) Criar novos objetos",
			"D) Validar dados de entrada",
		],
		correct: 1,
	},
	{
		question:
			"Qual palavra-chave √© usada para chamar outro construtor da mesma classe?",
		options: ["A) super()", "B) new()", "C) this()", "D) call()"],
		correct: 2,
	},
];

// Slide navigation functions
function initializeSlides() {
	showSlide(0);
}

function showSlide(index) {
	slides.forEach((slide, i) => {
		slide.style.display = i === index ? "block" : "none";
		if (i === index) {
			slide.classList.add("slide-enter");
		}
	});

	updateSlidePosition();
	updateSlideIndicators();
	updateSlideCounter();
	updateProgress();
}

function changeSlide(direction) {
	const newIndex = currentSlideIndex + direction;
	if (newIndex >= 0 && newIndex < totalSlides) {
		currentSlideIndex = newIndex;
		showSlide(currentSlideIndex);
	}
}

function goToSlide(slideIndex) {
	if (slideIndex >= 0 && slideIndex < totalSlides) {
		currentSlideIndex = slideIndex;
		showSlide(currentSlideIndex);
		updateSlidePosition();
		updateSlideIndicators();
		updateSlideCounter();
		updateProgress();
	}
}

function updateSlidePosition() {
	/*const container = document.getElementById("slideContainer");
	const translateX = -currentSlide * (100 / totalSlides); // 16.67% per slide (100% / total slides)
	container.style.transform = `translateX(${translateX}%)`;
	console.log(currentSlide);
	// Update navigation buttons*/
	document.getElementById("prevBtn").disabled = currentSlideIndex === 0;
	document.getElementById("nextBtn").style.display =
		currentSlide === totalSlides - 1 ? "none" : "flex";
}

function updateSlideIndicators() {
	const indicators = document.querySelectorAll(".slide-indicator");

	indicators.forEach((indicator, index) => {
		if (index === currentSlideIndex) {
			indicator.classList.remove("bg-sage-300");
			indicator.classList.add("bg-sage-600");
		} else {
			indicator.classList.remove("bg-sage-600");
			indicator.classList.add("bg-sage-300");
		}
	});
}

function updateSlideCounter() {
	document.getElementById("currentSlideNumber").textContent =
		currentSlideIndex + 1;
	document.getElementById("totalSlides").textContent = totalSlides;
}

function updateProgress() {
	const progress = ((currentSlideIndex + 1) / totalSlides) * 100;
	document.getElementById("globalProgress").style.width = `${progress}%`;
}

// Keyboard navigation
document.addEventListener("keydown", (event) => {
	if (event.key === "ArrowRight") {
		event.preventDefault();
		changeSlide(1);
	} else if (event.key === "ArrowLeft") {
		event.preventDefault();
		changeSlide(-1);
	} else if (event.key >= "1" && event.key <= totalSlides) {
		event.preventDefault();
		goToSlide(parseInt(event.key) - 1);
	}
});

// Constructor demonstration
function demonstrateConstructor(type) {
	const output = document.getElementById("constructorDemo");

	switch (type) {
		case "default":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-sage-800 mb-2">‚úÖ Construtor Padr√£o</div>
                            <div class="bg-sage-100 p-3 rounded-lg mb-3 code-block text-sm">
                                <code>Pessoa p1 = new Pessoa();</code>
                            </div>
                            <div class="text-sage-700 space-y-1">
                                <div>‚Ä¢ Nome: "N√£o informado"</div>
                                <div>‚Ä¢ Idade: 0</div>
                            </div>
                        </div>
                    `;
			break;
		case "parameterized":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-sage-800 mb-2">‚úÖ Construtor Parametrizado</div>
                            <div class="bg-sage-100 p-3 rounded-lg mb-3 code-block text-sm">
                                <code>Pessoa p2 = new Pessoa("Jo√£o", 25);</code>
                            </div>
                            <div class="text-sage-700 space-y-1">
                                <div>‚Ä¢ Nome: "Jo√£o"</div>
                                <div>‚Ä¢ Idade: 25</div>
                            </div>
                        </div>
                    `;
			break;
		case "overloaded":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-sage-800 mb-2">‚úÖ Sobrecarga de Construtores</div>
                            <div class="bg-sage-100 p-3 rounded-lg mb-3 code-block text-sm space-y-1">
                                <div><code>Pessoa p1 = new Pessoa();</code></div>
                                <div><code>Pessoa p2 = new Pessoa("Maria");</code></div>
                                <div><code>Pessoa p3 = new Pessoa("Jo√£o", 30);</code></div>
                            </div>
                            <div class="text-sage-700">
                                <div class="font-semibold">M√∫ltiplas formas de criar objetos! üéØ</div>
                            </div>
                        </div>
                    `;
			break;
	}
}

// Validation testing
function testValidation(type) {
	const output = document.getElementById("validationResult");

	if (type === "valid") {
		output.innerHTML = `
                    <div class="text-left animate-slide-up">
                        <div class="font-semibold text-green-800 mb-2">‚úÖ Dados V√°lidos</div>
                        <div class="bg-green-100 p-3 rounded-lg mb-3 code-block text-sm space-y-1">
                            <div><code>conta.setTitular("Jo√£o Silva");</code></div>
                            <div><code>conta.setSaldo(1000.0);</code></div>
                        </div>
                        <div class="text-green-700 font-semibold">
                            Sucesso! Dados armazenados corretamente. ‚ú®
                        </div>
                    </div>
                `;
	} else {
		output.innerHTML = `
                    <div class="text-left animate-slide-up">
                        <div class="font-semibold text-red-800 mb-2">‚ùå Dados Inv√°lidos</div>
                        <div class="bg-red-100 p-3 rounded-lg mb-3 code-block text-sm space-y-1">
                            <div><code>conta.setTitular("");</code></div>
                            <div><code>conta.setSaldo(-500.0);</code></div>
                        </div>
                        <div class="text-red-700">
                            <div class="font-semibold mb-1">Erro: IllegalArgumentException!</div>
                            <div class="text-sm space-y-1">
                                <div>‚Ä¢ Titular n√£o pode ser vazio</div>
                                <div>‚Ä¢ Saldo n√£o pode ser negativo</div>
                            </div>
                        </div>
                    </div>
                `;
	}
}

// Product creation
function createProduct(type) {
	const output = document.getElementById("productDemo");

	switch (type) {
		case "default":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-sage-800 mb-2">üõçÔ∏è Produto Padr√£o</div>
                            <div class="bg-sage-100 p-3 rounded-lg mb-3 code-block text-sm">
                                <code>Produto p1 = new Produto();</code>
                            </div>
                            <div class="text-sage-700 space-y-1">
                                <div>‚Ä¢ Nome: "Sem nome"</div>
                                <div>‚Ä¢ Pre√ßo: R$ 0,00</div>
                                <div>‚Ä¢ Quantidade: 0</div>
                                <div>‚Ä¢ Categoria: "Geral"</div>
                            </div>
                        </div>
                    `;
			break;
		case "basic":
			const codigo1 = "PRD" + Math.floor(Math.random() * 10000);
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-sage-800 mb-2">üõçÔ∏è Produto B√°sico</div>
                            <div class="bg-sage-100 p-3 rounded-lg mb-3 code-block text-sm">
                                <code>Produto p2 = new Produto("Notebook", 2500.00);</code>
                            </div>
                            <div class="text-sage-700 space-y-1">
                                <div>‚Ä¢ Nome: "Notebook"</div>
                                <div>‚Ä¢ Pre√ßo: R$ 2.500,00</div>
                                <div>‚Ä¢ Quantidade: 0</div>
                                <div>‚Ä¢ Categoria: "Geral"</div>
                                <div>‚Ä¢ C√≥digo: ${codigo1}</div>
                            </div>
                        </div>
                    `;
			break;
		case "complete":
			const codigo2 = "PRD" + Math.floor(Math.random() * 10000);
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-sage-800 mb-2">üõçÔ∏è Produto Completo</div>
                            <div class="bg-sage-100 p-3 rounded-lg mb-3 code-block text-sm">
                                <code>Produto p3 = new Produto("Mouse", 45.90, 50, "Inform√°tica");</code>
                            </div>
                            <div class="text-sage-700 space-y-1">
                                <div>‚Ä¢ Nome: "Mouse"</div>
                                <div>‚Ä¢ Pre√ßo: R$ 45,90</div>
                                <div>‚Ä¢ Quantidade: 50</div>
                                <div>‚Ä¢ Categoria: "Inform√°tica"</div>
                                <div>‚Ä¢ C√≥digo: ${codigo2}</div>
                                <div class="font-semibold text-green-700">‚Ä¢ Valor Total: R$ 2.295,00</div>
                            </div>
                        </div>
                    `;
			break;
	}
}

// Quiz functions
function selectAnswer(index) {
	selectedAnswer = index;

	// Reset all buttons
	document.querySelectorAll(".answer-btn").forEach((btn) => {
		btn.classList.remove("bg-sage-200", "border-sage-400");
	});

	// Highlight selected
	document
		.querySelectorAll(".answer-btn")
		[index].classList.add("bg-sage-200", "border-sage-400");

	// Enable next button
	document.getElementById("nextQuizBtn").disabled = false;
}

function nextQuestion() {
	if (selectedAnswer !== null) {
		quizAnswers[currentQuizQuestion] = selectedAnswer;
		currentQuizQuestion++;

		if (currentQuizQuestion < quizQuestions.length) {
			loadQuestion();
		} else {
			showQuizResults();
		}

		selectedAnswer = null;
	}
}

function previousQuestion() {
	if (currentQuizQuestion > 0) {
		currentQuizQuestion--;
		loadQuestion();
		selectedAnswer = quizAnswers[currentQuizQuestion] || null;

		if (selectedAnswer !== null) {
			document
				.querySelectorAll(".answer-btn")
				[selectedAnswer].classList.add("bg-sage-200", "border-sage-400");
			document.getElementById("nextQuizBtn").disabled = false;
		}
	}
}

function loadQuestion() {
	const question = quizQuestions[currentQuizQuestion];

	document.getElementById("currentQuestion").textContent =
		currentQuizQuestion + 1;
	document.getElementById("questionText").textContent = question.question;

	const answersContainer = document.getElementById("answersContainer");
	answersContainer.innerHTML = "";

	question.options.forEach((option, index) => {
		const button = document.createElement("button");
		button.className =
			"answer-btn w-full text-left p-4 rounded-lg border border-sage-200 hover:bg-sage-50 transition-all duration-300";
		button.textContent = option;
		button.onclick = () => selectAnswer(index);
		answersContainer.appendChild(button);
	});

	// Update progress
	const progress = ((currentQuizQuestion + 1) / quizQuestions.length) * 100;
	document.getElementById("quizProgress").style.width = progress + "%";

	// Update buttons
	document.getElementById("prevQuizBtn").disabled = currentQuizQuestion === 0;
	document.getElementById("nextQuizBtn").disabled = true;
	document.getElementById("nextQuizBtn").textContent =
		currentQuizQuestion === quizQuestions.length - 1
			? "Finalizar"
			: "Pr√≥xima ‚Üí";
}

function showQuizResults() {
	let score = 0;
	quizAnswers.forEach((answer, index) => {
		if (answer === quizQuestions[index].correct) {
			score++;
		}
	});

	document.getElementById("quizContainer").classList.add("hidden");
	document.getElementById("quizResults").classList.remove("hidden");
	document.getElementById("finalScore").textContent = score;

	let message = "";
	if (score === 5) message = "Perfeito! Voc√™ domina o assunto! üèÜ";
	else if (score >= 4) message = "Excelente trabalho! üéâ";
	else if (score >= 3) message = "Bom trabalho! Continue estudando! üëç";
	else message = "Continue praticando! Voc√™ vai conseguir! üí™";

	document.getElementById("scoreMessage").textContent = message;
}

function restartQuiz() {
	currentQuizQuestion = 0;
	quizAnswers = [];
	selectedAnswer = null;

	document.getElementById("quizContainer").classList.remove("hidden");
	document.getElementById("quizResults").classList.add("hidden");

	loadQuestion();
}

// Bank Account Activity Functions
function showBankAccountActivity() {
	const activity = document.getElementById("bankAccountActivity");
	activity.classList.toggle("hidden");
}

// Bank Account Simulator
function createBankAccount(type) {
	const output = document.getElementById("bankAccountDemo");
	const operations = document.getElementById("bankOperations");

	switch (type) {
		case "default":
			currentBankAccount = {
				numero: generateAccountNumber(),
				titular: "TITULAR N√ÉO INFORMADO",
				saldo: 0.0,
				tipoConta: "Corrente",
				ativa: true,
				historico: [],
			};
			break;
		case "basic":
			currentBankAccount = {
				numero: generateAccountNumber(),
				titular: "MARIA SILVA",
				saldo: 0.0,
				tipoConta: "Corrente",
				ativa: true,
				historico: [],
			};
			break;
		case "withBalance":
			currentBankAccount = {
				numero: generateAccountNumber(),
				titular: "JO√ÉO SANTOS",
				saldo: 1500.0,
				tipoConta: "Corrente",
				ativa: true,
				historico: [
					{
						tipo: "Dep√≥sito Inicial",
						valor: 1500.0,
						data: new Date().toLocaleDateString(),
					},
				],
			};
			break;
		case "complete":
			currentBankAccount = {
				numero: generateAccountNumber(),
				titular: "ANA COSTA",
				saldo: 2500.0,
				tipoConta: "Poupan√ßa",
				ativa: true,
				historico: [
					{
						tipo: "Dep√≥sito Inicial",
						valor: 2500.0,
						data: new Date().toLocaleDateString(),
					},
				],
			};
			break;
	}

	displayBankAccount();
	operations.classList.remove("hidden");
}

function displayBankAccount() {
	const output = document.getElementById("bankAccountDemo");
	const account = currentBankAccount;

	const statusColor = account.ativa ? "text-green-700" : "text-red-700";
	const statusIcon = account.ativa ? "‚úÖ" : "‚ùå";
	const statusText = account.ativa ? "Ativa" : "Inativa";

	output.innerHTML = `
                <div class="text-left animate-slide-up">
                    <div class="flex justify-between items-start mb-4">
                        <div>
                            <div class="font-bold text-sage-800 text-lg mb-1">üè¶ Conta Banc√°ria</div>
                            <div class="text-sm text-sage-600">N√∫mero: ${account.numero}</div>
                        </div>
                        <div class="text-right">
                            <div class="${statusColor} font-semibold">${statusIcon} ${statusText}</div>
                            <div class="text-sm text-sage-600">${account.tipoConta}</div>
                        </div>
                    </div>
                    
                    <div class="bg-sage-50 rounded-lg p-4 mb-4">
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <div class="text-sm text-sage-600">Titular</div>
                                <div class="font-semibold text-sage-800">${account.titular}</div>
                            </div>
                            <div>
                                <div class="text-sm text-sage-600">Saldo Atual</div>
                                <div class="font-bold text-2xl text-sage-800">R$ ${account.saldo.toFixed(2).replace(".", ",")}</div>
                            </div>
                        </div>
                    </div>
                    
                    ${
											account.historico.length > 0
												? `
                        <div class="text-sm">
                            <div class="font-semibold text-sage-700 mb-2">√öltimas Transa√ß√µes:</div>
                            <div class="space-y-1 max-h-20 overflow-y-auto">
                                ${account.historico
																	.slice(-3)
																	.map(
																		(h) => `
                                    <div class="flex justify-between text-xs">
                                        <span>${h.tipo}</span>
                                        <span class="font-semibold">R$ ${h.valor.toFixed(2).replace(".", ",")}</span>
                                    </div>
                                `,
																	)
																	.join("")}
                            </div>
                        </div>
                    `
												: ""
										}
                </div>
            `;
}

function performOperation(operation) {
	if (!currentBankAccount) {
		alert("Primeiro crie uma conta banc√°ria!");
		return;
	}

	const valueInput = document.getElementById("operationValue");
	const valor = parseFloat(valueInput.value) || 0;

	switch (operation) {
		case "deposit":
			if (valor <= 0) {
				alert("Valor deve ser positivo!");
				return;
			}
			if (!currentBankAccount.ativa) {
				alert("Conta inativa! N√£o √© poss√≠vel depositar.");
				return;
			}
			currentBankAccount.saldo += valor;
			currentBankAccount.historico.push({
				tipo: "Dep√≥sito",
				valor: valor,
				data: new Date().toLocaleDateString(),
			});
			alert(
				`Dep√≥sito de R$ ${valor.toFixed(2).replace(".", ",")} realizado com sucesso!`,
			);
			break;

		case "withdraw":
			if (valor <= 0) {
				alert("Valor deve ser positivo!");
				return;
			}
			if (!currentBankAccount.ativa) {
				alert("Conta inativa! N√£o √© poss√≠vel sacar.");
				return;
			}
			if (valor > currentBankAccount.saldo) {
				alert(
					`Saldo insuficiente! Saldo atual: R$ ${currentBankAccount.saldo.toFixed(2).replace(".", ",")}`,
				);
				return;
			}
			currentBankAccount.saldo -= valor;
			currentBankAccount.historico.push({
				tipo: "Saque",
				valor: -valor,
				data: new Date().toLocaleDateString(),
			});
			alert(
				`Saque de R$ ${valor.toFixed(2).replace(".", ",")} realizado com sucesso!`,
			);
			break;

		case "activate":
			currentBankAccount.ativa = true;
			alert("Conta ativada com sucesso!");
			break;

		case "deactivate":
			currentBankAccount.ativa = false;
			alert("Conta desativada!");
			break;

		case "statement":
			showStatement();
			return;
	}

	valueInput.value = "";
	displayBankAccount();
}

function showStatement() {
	const account = currentBankAccount;
	let statement = `=== EXTRATO BANC√ÅRIO ===\n`;
	statement += `Conta: ${account.numero}\n`;
	statement += `Titular: ${account.titular}\n`;
	statement += `Tipo: ${account.tipoConta}\n`;
	statement += `Status: ${account.ativa ? "Ativa" : "Inativa"}\n\n`;
	statement += `=== TRANSA√á√ïES ===\n`;

	if (account.historico.length === 0) {
		statement += `Nenhuma transa√ß√£o realizada.\n`;
	} else {
		account.historico.forEach((transacao, index) => {
			const sinal = transacao.valor >= 0 ? "+" : "";
			statement += `${index + 1}. ${transacao.tipo} - ${sinal}R$ ${Math.abs(transacao.valor).toFixed(2).replace(".", ",")} (${transacao.data})\n`;
		});
	}

	statement += `\n=== SALDO ATUAL ===\n`;
	statement += `R$ ${account.saldo.toFixed(2).replace(".", ",")}\n`;

	alert(statement);
}

function generateAccountNumber() {
	return (
		String(Math.floor(Math.random() * 1000000)).padStart(6, "0") +
		"-" +
		Math.floor(Math.random() * 10)
	);
}

// Practical Exercises Functions
function showPracticalExercises() {
	const exercises = document.getElementById("practicalExercises");
	exercises.classList.toggle("hidden");
}

function showSupportMaterial() {
	const material = document.getElementById("supportMaterial");
	material.classList.toggle("hidden");
}

function demonstrateExercise(type) {
	const output = document.getElementById("exerciseDemo");

	switch (type) {
		case "aluno":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-blue-800 mb-4 text-lg">üéì Classe Aluno - Demonstra√ß√£o</div>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <div class="bg-blue-100 p-4 rounded-lg mb-4 code-block text-sm">
                                        <div class="font-semibold mb-2">Construtor Completo:</div>
                                        <code>Aluno a1 = new Aluno("Jo√£o Silva", "2024001", 8.5, 7.0, 9.2);</code>
                                    </div>
                                    <div class="space-y-2 text-sm">
                                        <div><strong>Nome:</strong> JO√ÉO SILVA</div>
                                        <div><strong>Matr√≠cula:</strong> 2024001</div>
                                        <div><strong>Notas:</strong> 8.5, 7.0, 9.2</div>
                                        <div><strong>M√©dia:</strong> 8.23</div>
                                        <div class="text-green-700 font-semibold">‚úÖ Situa√ß√£o: APROVADO</div>
                                    </div>
                                </div>
                                <div>
                                    <div class="bg-red-100 p-4 rounded-lg mb-4">
                                        <div class="font-semibold text-red-800 mb-2">Valida√ß√µes:</div>
                                        <ul class="text-sm text-red-700 space-y-1">
                                            <li>‚Ä¢ Nome deve ter pelo menos 3 caracteres</li>
                                            <li>‚Ä¢ Matr√≠cula deve ser √∫nica</li>
                                            <li>‚Ä¢ Notas devem estar entre 0 e 10</li>
                                            <li>‚Ä¢ M√©dia ‚â• 7.0 = Aprovado</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "funcionario":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-green-800 mb-4 text-lg">üíº Classe Funcionario - Demonstra√ß√£o</div>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <div class="bg-green-100 p-4 rounded-lg mb-4 code-block text-sm">
                                        <div class="font-semibold mb-2">Construtor Completo:</div>
                                        <code>Funcionario f1 = new Funcionario("Maria Santos", "123.456.789-00", 5500.00, "Analista", "01/01/2020");</code>
                                    </div>
                                    <div class="space-y-2 text-sm">
                                        <div><strong>Nome:</strong> MARIA SANTOS</div>
                                        <div><strong>CPF:</strong> 123.456.789-00</div>
                                        <div><strong>Sal√°rio:</strong> R$ 5.500,00</div>
                                        <div><strong>Cargo:</strong> Analista</div>
                                        <div><strong>Tempo de Empresa:</strong> 4 anos</div>
                                        <div class="text-green-700 font-semibold">üí∞ Ap√≥s aumento 10%: R$ 6.050,00</div>
                                    </div>
                                </div>
                                <div>
                                    <div class="bg-yellow-100 p-4 rounded-lg mb-4">
                                        <div class="font-semibold text-yellow-800 mb-2">Valida√ß√µes:</div>
                                        <ul class="text-sm text-yellow-700 space-y-1">
                                            <li>‚Ä¢ CPF deve ter formato v√°lido</li>
                                            <li>‚Ä¢ Sal√°rio deve ser positivo</li>
                                            <li>‚Ä¢ Nome n√£o pode ser vazio</li>
                                            <li>‚Ä¢ Data de admiss√£o v√°lida</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "validacao":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-purple-800 mb-4 text-lg">‚ö° Sistema de Valida√ß√£o - Teste</div>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <div class="bg-green-100 p-4 rounded-lg mb-4">
                                        <div class="font-semibold text-green-800 mb-2">‚úÖ Dados V√°lidos:</div>
                                        <div class="text-sm text-green-700 space-y-1">
                                            <div>‚Ä¢ Aluno("Ana", "2024002", 8.0, 9.0, 7.5)</div>
                                            <div>‚Ä¢ Funcionario("Pedro", "987.654.321-00", 3000.00)</div>
                                            <div>‚Ä¢ ContaBancaria("Carlos", 1500.00, "Poupan√ßa")</div>
                                        </div>
                                        <div class="mt-2 text-green-800 font-semibold">Resultado: Todos criados com sucesso! üéâ</div>
                                    </div>
                                </div>
                                <div>
                                    <div class="bg-red-100 p-4 rounded-lg mb-4">
                                        <div class="font-semibold text-red-800 mb-2">‚ùå Dados Inv√°lidos:</div>
                                        <div class="text-sm text-red-700 space-y-1">
                                            <div>‚Ä¢ Aluno("", "2024003", 11.0, -2.0, 8.0)</div>
                                            <div>‚Ä¢ Funcionario("Jos√©", "123", -1000.00)</div>
                                            <div>‚Ä¢ ContaBancaria("", -500.00, "Investimento")</div>
                                        </div>
                                        <div class="mt-2 text-red-800 font-semibold">Resultado: IllegalArgumentException! üö´</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "veiculo":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-orange-800 mb-4 text-lg">üöô Classe Veiculo - Demonstra√ß√£o</div>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <div class="bg-orange-100 p-4 rounded-lg mb-4 code-block text-sm">
                                        <div class="font-semibold mb-2">Construtor Completo:</div>
                                        <code>Veiculo v1 = new Veiculo("Toyota", "Corolla", 2020, "Prata", 85000.00, 45000);</code>
                                    </div>
                                    <div class="space-y-2 text-sm">
                                        <div><strong>Marca:</strong> Toyota</div>
                                        <div><strong>Modelo:</strong> Corolla</div>
                                        <div><strong>Ano:</strong> 2020</div>
                                        <div><strong>Cor:</strong> Prata</div>
                                        <div><strong>Pre√ßo Original:</strong> R$ 85.000,00</div>
                                        <div><strong>Quilometragem:</strong> 45.000 km</div>
                                        <div class="text-orange-700 font-semibold">üìâ Valor Atual: R$ 68.000,00 (20% deprecia√ß√£o)</div>
                                        <div class="text-red-700 font-semibold">üîß Revis√£o necess√°ria em 5.000 km</div>
                                    </div>
                                </div>
                                <div>
                                    <div class="bg-blue-100 p-4 rounded-lg mb-4">
                                        <div class="font-semibold text-blue-800 mb-2">Funcionalidades:</div>
                                        <ul class="text-sm text-blue-700 space-y-1">
                                            <li>‚Ä¢ C√°lculo de deprecia√ß√£o por ano</li>
                                            <li>‚Ä¢ Verifica√ß√£o de revis√£o (a cada 10.000 km)</li>
                                            <li>‚Ä¢ Valida√ß√£o de ano (1900-2024)</li>
                                            <li>‚Ä¢ Pre√ßo e quilometragem positivos</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "livro":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-teal-800 mb-4 text-lg">üìñ Classe Livro - Demonstra√ß√£o</div>
                            <div class="grid md:grid-cols-2 gap-6">
                                <div>
                                    <div class="bg-teal-100 p-4 rounded-lg mb-4 code-block text-sm">
                                        <div class="font-semibold mb-2">Construtor Completo:</div>
                                        <code>Livro l1 = new Livro("978-85-7522-123-4", "Clean Code", "Robert Martin", "Alta Books", 2009, 464);</code>
                                    </div>
                                    <div class="space-y-2 text-sm">
                                        <div><strong>ISBN:</strong> 978-85-7522-123-4</div>
                                        <div><strong>T√≠tulo:</strong> Clean Code</div>
                                        <div><strong>Autor:</strong> Robert Martin</div>
                                        <div><strong>Editora:</strong> Alta Books</div>
                                        <div><strong>Ano:</strong> 2009</div>
                                        <div><strong>P√°ginas:</strong> 464</div>
                                        <div class="text-teal-700 font-semibold">üìÖ Idade: 15 anos</div>
                                        <div class="text-green-700 font-semibold">‚úÖ Status: Dispon√≠vel</div>
                                    </div>
                                </div>
                                <div>
                                    <div class="bg-purple-100 p-4 rounded-lg mb-4">
                                        <div class="font-semibold text-purple-800 mb-2">Valida√ß√µes:</div>
                                        <ul class="text-sm text-purple-700 space-y-1">
                                            <li>‚Ä¢ ISBN deve ter formato v√°lido</li>
                                            <li>‚Ä¢ Ano entre 1450 e ano atual</li>
                                            <li>‚Ä¢ N√∫mero de p√°ginas positivo</li>
                                            <li>‚Ä¢ T√≠tulo e autor n√£o vazios</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "integrado":
			output.innerHTML = `
                        <div class="text-left animate-slide-up">
                            <div class="font-semibold text-red-800 mb-4 text-lg">üè¢ Sistema Integrado - Folha de Pagamento</div>
                            <div class="space-y-4">
                                <div class="bg-red-100 p-4 rounded-lg">
                                    <div class="font-semibold text-red-800 mb-2">Simula√ß√£o do Sistema:</div>
                                    <div class="grid md:grid-cols-2 gap-4 text-sm">
                                        <div>
                                            <div class="font-semibold mb-2">üë®‚Äçüíº Funcion√°rio:</div>
                                            <div>‚Ä¢ Nome: CARLOS SILVA</div>
                                            <div>‚Ä¢ CPF: 111.222.333-44</div>
                                            <div>‚Ä¢ Cargo: Desenvolvedor</div>
                                            <div>‚Ä¢ Sal√°rio: R$ 6.000,00</div>
                                        </div>
                                        <div>
                                            <div class="font-semibold mb-2">üè¶ Conta Banc√°ria:</div>
                                            <div>‚Ä¢ N√∫mero: 123456-7</div>
                                            <div>‚Ä¢ Titular: CARLOS SILVA</div>
                                            <div>‚Ä¢ Tipo: Corrente</div>
                                            <div>‚Ä¢ Saldo: R$ 2.500,00</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="bg-green-100 p-4 rounded-lg">
                                    <div class="font-semibold text-green-800 mb-2">üí∞ Processamento do Pagamento:</div>
                                    <div class="text-sm text-green-700 space-y-1">
                                        <div>1. Valida√ß√£o dos dados do funcion√°rio ‚úÖ</div>
                                        <div>2. Verifica√ß√£o da conta banc√°ria ‚úÖ</div>
                                        <div>3. Dep√≥sito do sal√°rio: R$ 6.000,00 ‚úÖ</div>
                                        <div>4. Novo saldo: R$ 8.500,00 ‚úÖ</div>
                                        <div class="font-semibold mt-2">Pagamento processado com sucesso! üéâ</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;
	}
}

// Assignment Functions
function showExerciseDetails(type) {
	const details = document.getElementById("exerciseDetails");
	const content = document.getElementById("exerciseContent");

	let exerciseContent = "";

	switch (type) {
		case "funcionarios":
			exerciseContent = `
                        <div class="text-left animate-slide-up">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-2xl font-bold text-blue-800">üë®‚Äçüíº Sistema de Funcion√°rios - Detalhes</h3>
                                <button onclick="hideExerciseDetails()" class="text-sage-500 hover:text-sage-700">‚úï</button>
                            </div>
                            
                            <div class="grid lg:grid-cols-2 gap-8">
                                <div class="space-y-6">
                                    <div class="bg-blue-50 rounded-lg p-6 border border-blue-200">
                                        <h4 class="font-semibold text-blue-800 mb-4">Estrutura das Classes:</h4>
                                        <div class="bg-blue-900 rounded-lg p-4 text-blue-100 code-block text-sm">
                                            <pre>public class Funcionario {
    private String nome;
    private String cpf;
    private double salario;
    private String cargo;
    private LocalDate dataAdmissao;
    
    // Construtores
    // Getters e Setters com valida√ß√£o
    // M√©todos de neg√≥cio
}

public class Empresa {
    private String nome;
    private List&lt;Funcionario&gt; funcionarios;
    
    // M√©todos de gerenciamento
}</pre>
                                        </div>
                                    </div>
                                    
                                    <div class="bg-green-50 rounded-lg p-6 border border-green-200">
                                        <h4 class="font-semibold text-green-800 mb-4">Valida√ß√µes Obrigat√≥rias:</h4>
                                        <ul class="text-sm text-green-700 space-y-2">
                                            <li>‚Ä¢ CPF: formato XXX.XXX.XXX-XX</li>
                                            <li>‚Ä¢ Sal√°rio: valor positivo</li>
                                            <li>‚Ä¢ Nome: n√£o vazio, m√≠nimo 3 caracteres</li>
                                            <li>‚Ä¢ Data admiss√£o: n√£o futura</li>
                                            <li>‚Ä¢ Cargo: n√£o vazio</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <div class="space-y-6">
                                    <div class="bg-purple-50 rounded-lg p-6 border border-purple-200">
                                        <h4 class="font-semibold text-purple-800 mb-4">M√©todos Obrigat√≥rios:</h4>
                                        <ul class="text-sm text-purple-700 space-y-2">
                                            <li><strong>calcularTempoEmpresa():</strong> retorna anos/meses</li>
                                            <li><strong>aplicarAumento(percentual):</strong> aumenta sal√°rio</li>
                                            <li><strong>calcularSalarioAnual():</strong> sal√°rio * 12</li>
                                            <li><strong>contratar(funcionario):</strong> adiciona √† lista</li>
                                            <li><strong>demitir(cpf):</strong> remove da lista</li>
                                            <li><strong>listarPorCargo(cargo):</strong> filtra funcion√°rios</li>
                                            <li><strong>calcularFolhaSalarial():</strong> soma todos sal√°rios</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-amber-50 rounded-lg p-6 border border-amber-200">
                                        <h4 class="font-semibold text-amber-800 mb-4">Exemplo de Uso:</h4>
                                        <div class="bg-amber-900 rounded-lg p-4 text-amber-100 code-block text-sm">
                                            <pre>Empresa empresa = new Empresa("TechCorp");
Funcionario f1 = new Funcionario(
    "Jo√£o Silva", 
    "123.456.789-00", 
    5000.0, 
    "Desenvolvedor", 
    LocalDate.of(2020, 1, 15)
);

empresa.contratar(f1);
f1.aplicarAumento(10.0); // 10% de aumento
System.out.println(f1.calcularTempoEmpresa());</pre>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "bancario":
			exerciseContent = `
                        <div class="text-left animate-slide-up">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-2xl font-bold text-green-800">üè¶ Sistema Banc√°rio - Detalhes</h3>
                                <button onclick="hideExerciseDetails()" class="text-sage-500 hover:text-sage-700">‚úï</button>
                            </div>
                            
                            <div class="grid lg:grid-cols-2 gap-8">
                                <div class="space-y-6">
                                    <div class="bg-green-50 rounded-lg p-6 border border-green-200">
                                        <h4 class="font-semibold text-green-800 mb-4">Funcionalidades Principais:</h4>
                                        <ul class="text-sm text-green-700 space-y-2">
                                            <li>‚Ä¢ <strong>Depositar:</strong> adicionar valor ao saldo</li>
                                            <li>‚Ä¢ <strong>Sacar:</strong> retirar valor (verificar saldo)</li>
                                            <li>‚Ä¢ <strong>Transferir:</strong> entre contas do mesmo banco</li>
                                            <li>‚Ä¢ <strong>Consultar Saldo:</strong> exibir saldo atual</li>
                                            <li>‚Ä¢ <strong>Extrato:</strong> hist√≥rico de transa√ß√µes</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-blue-50 rounded-lg p-6 border border-blue-200">
                                        <h4 class="font-semibold text-blue-800 mb-4">Tipos de Conta:</h4>
                                        <ul class="text-sm text-blue-700 space-y-2">
                                            <li>‚Ä¢ <strong>Corrente:</strong> sem limite de saques</li>
                                            <li>‚Ä¢ <strong>Poupan√ßa:</strong> rendimento mensal</li>
                                            <li>‚Ä¢ <strong>Sal√°rio:</strong> limita√ß√µes espec√≠ficas</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <div class="space-y-6">
                                    <div class="bg-red-50 rounded-lg p-6 border border-red-200">
                                        <h4 class="font-semibold text-red-800 mb-4">Valida√ß√µes Cr√≠ticas:</h4>
                                        <ul class="text-sm text-red-700 space-y-2">
                                            <li>‚Ä¢ Saldo nunca negativo</li>
                                            <li>‚Ä¢ Valores de transa√ß√£o positivos</li>
                                            <li>‚Ä¢ Conta de destino v√°lida para transfer√™ncias</li>
                                            <li>‚Ä¢ Titular n√£o vazio</li>
                                            <li>‚Ä¢ N√∫mero da conta √∫nico</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-purple-50 rounded-lg p-6 border border-purple-200">
                                        <h4 class="font-semibold text-purple-800 mb-4">Relat√≥rios do Banco:</h4>
                                        <ul class="text-sm text-purple-700 space-y-2">
                                            <li>‚Ä¢ Total de contas por tipo</li>
                                            <li>‚Ä¢ Saldo total do banco</li>
                                            <li>‚Ä¢ Contas com maior movimento</li>
                                            <li>‚Ä¢ Estat√≠sticas de transa√ß√µes</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "loja":
			exerciseContent = `
                        <div class="text-left animate-slide-up">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-2xl font-bold text-purple-800">üõí Loja Virtual - Detalhes</h3>
                                <button onclick="hideExerciseDetails()" class="text-sage-500 hover:text-sage-700">‚úï</button>
                            </div>
                            
                            <div class="grid lg:grid-cols-2 gap-8">
                                <div class="space-y-6">
                                    <div class="bg-purple-50 rounded-lg p-6 border border-purple-200">
                                        <h4 class="font-semibold text-purple-800 mb-4">Gest√£o de Produtos:</h4>
                                        <ul class="text-sm text-purple-700 space-y-2">
                                            <li>‚Ä¢ Cadastro com c√≥digo √∫nico</li>
                                            <li>‚Ä¢ Controle de estoque autom√°tico</li>
                                            <li>‚Ä¢ Categoriza√ß√£o de produtos</li>
                                            <li>‚Ä¢ Pre√ßos com valida√ß√£o</li>
                                            <li>‚Ä¢ Busca por nome/categoria</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-orange-50 rounded-lg p-6 border border-orange-200">
                                        <h4 class="font-semibold text-orange-800 mb-4">Sistema de Pedidos:</h4>
                                        <ul class="text-sm text-orange-700 space-y-2">
                                            <li>‚Ä¢ Carrinho de compras</li>
                                            <li>‚Ä¢ C√°lculo autom√°tico do total</li>
                                            <li>‚Ä¢ Verifica√ß√£o de estoque</li>
                                            <li>‚Ä¢ Hist√≥rico de pedidos</li>
                                            <li>‚Ä¢ Status do pedido</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <div class="space-y-6">
                                    <div class="bg-teal-50 rounded-lg p-6 border border-teal-200">
                                        <h4 class="font-semibold text-teal-800 mb-4">Gest√£o de Clientes:</h4>
                                        <ul class="text-sm text-teal-700 space-y-2">
                                            <li>‚Ä¢ Cadastro completo</li>
                                            <li>‚Ä¢ Valida√ß√£o de CPF e email</li>
                                            <li>‚Ä¢ Endere√ßo para entrega</li>
                                            <li>‚Ä¢ Hist√≥rico de compras</li>
                                            <li>‚Ä¢ Programa de fidelidade</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-indigo-50 rounded-lg p-6 border border-indigo-200">
                                        <h4 class="font-semibold text-indigo-800 mb-4">Relat√≥rios Gerenciais:</h4>
                                        <ul class="text-sm text-indigo-700 space-y-2">
                                            <li>‚Ä¢ Produtos mais vendidos</li>
                                            <li>‚Ä¢ Vendas por categoria</li>
                                            <li>‚Ä¢ Faturamento mensal</li>
                                            <li>‚Ä¢ Clientes mais ativos</li>
                                            <li>‚Ä¢ Produtos em falta</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;

		case "escolar":
			exerciseContent = `
                        <div class="text-left animate-slide-up">
                            <div class="flex items-center justify-between mb-6">
                                <h3 class="text-2xl font-bold text-orange-800">üéì Sistema Escolar - Detalhes</h3>
                                <button onclick="hideExerciseDetails()" class="text-sage-500 hover:text-sage-700">‚úï</button>
                            </div>
                            
                            <div class="grid lg:grid-cols-2 gap-8">
                                <div class="space-y-6">
                                    <div class="bg-orange-50 rounded-lg p-6 border border-orange-200">
                                        <h4 class="font-semibold text-orange-800 mb-4">Gest√£o Acad√™mica:</h4>
                                        <ul class="text-sm text-orange-700 space-y-2">
                                            <li>‚Ä¢ Matr√≠cula de alunos</li>
                                            <li>‚Ä¢ Cadastro de disciplinas</li>
                                            <li>‚Ä¢ Lan√ßamento de notas por bimestre</li>
                                            <li>‚Ä¢ C√°lculo autom√°tico de m√©dias</li>
                                            <li>‚Ä¢ Controle de frequ√™ncia</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-cyan-50 rounded-lg p-6 border border-cyan-200">
                                        <h4 class="font-semibold text-cyan-800 mb-4">Sistema de Notas:</h4>
                                        <ul class="text-sm text-cyan-700 space-y-2">
                                            <li>‚Ä¢ Notas de 0 a 10</li>
                                            <li>‚Ä¢ 4 bimestres por ano</li>
                                            <li>‚Ä¢ M√©dia m√≠nima: 7.0</li>
                                            <li>‚Ä¢ Recupera√ß√£o autom√°tica</li>
                                            <li>‚Ä¢ Situa√ß√£o final do aluno</li>
                                        </ul>
                                    </div>
                                </div>
                                
                                <div class="space-y-6">
                                    <div class="bg-pink-50 rounded-lg p-6 border border-pink-200">
                                        <h4 class="font-semibold text-pink-800 mb-4">Relat√≥rios Acad√™micos:</h4>
                                        <ul class="text-sm text-pink-700 space-y-2">
                                            <li>‚Ä¢ Boletim individual do aluno</li>
                                            <li>‚Ä¢ Estat√≠sticas da turma</li>
                                            <li>‚Ä¢ Ranking de notas</li>
                                            <li>‚Ä¢ Alunos em recupera√ß√£o</li>
                                            <li>‚Ä¢ Desempenho por disciplina</li>
                                        </ul>
                                    </div>
                                    
                                    <div class="bg-lime-50 rounded-lg p-6 border border-lime-200">
                                        <h4 class="font-semibold text-lime-800 mb-4">Valida√ß√µes Acad√™micas:</h4>
                                        <ul class="text-sm text-lime-700 space-y-2">
                                            <li>‚Ä¢ Matr√≠cula √∫nica por aluno</li>
                                            <li>‚Ä¢ Notas entre 0 e 10</li>
                                            <li>‚Ä¢ Carga hor√°ria m√≠nima</li>
                                            <li>‚Ä¢ Professor por disciplina</li>
                                            <li>‚Ä¢ Semestre v√°lido (1-8)</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
			break;
	}

	content.innerHTML = exerciseContent;
	details.classList.remove("hidden");
}

function hideExerciseDetails() {
	document.getElementById("exerciseDetails").classList.add("hidden");
}

function showProjectDetails(type) {
	const details = document.getElementById("projectDetails");
	const content = document.getElementById("projectContent");

	if (type === "biblioteca") {
		content.innerHTML = `
                    <div class="text-left animate-slide-up">
                        <div class="flex items-center justify-between mb-6">
                            <h3 class="text-2xl font-bold text-emerald-800">üìö Sistema de Biblioteca - Especifica√ß√µes Completas</h3>
                            <button onclick="hideProjectDetails()" class="text-sage-500 hover:text-sage-700">‚úï</button>
                        </div>
                        
                        <div class="grid lg:grid-cols-2 gap-8 mb-8">
                            <div class="space-y-6">
                                <div class="bg-emerald-50 rounded-lg p-6 border border-emerald-200">
                                    <h4 class="font-semibold text-emerald-800 mb-4">Classes Principais:</h4>
                                    <div class="bg-emerald-900 rounded-lg p-4 text-emerald-100 code-block text-sm">
                                        <pre>public class Livro {
    private String isbn;
    private String titulo;
    private String autor;
    private String editora;
    private int anoPublicacao;
    private String categoria;
    private boolean disponivel;
}

public class Usuario {
    private String codigo;
    private String nome;
    private String email;
    private TipoUsuario tipo;
    private List&lt;Emprestimo&gt; historico;
}

public class Emprestimo {
    private Livro livro;
    private Usuario usuario;
    private LocalDate dataEmprestimo;
    private LocalDate dataDevolucao;
    private boolean devolvido;
}</pre>
                                    </div>
                                </div>
                                
                                <div class="bg-blue-50 rounded-lg p-6 border border-blue-200">
                                    <h4 class="font-semibold text-blue-800 mb-4">Funcionalidades Obrigat√≥rias:</h4>
                                    <ul class="text-sm text-blue-700 space-y-2">
                                        <li>‚Ä¢ <strong>Cadastro de Livros:</strong> ISBN √∫nico, valida√ß√µes completas</li>
                                        <li>‚Ä¢ <strong>Cadastro de Usu√°rios:</strong> diferentes tipos (aluno, professor, funcion√°rio)</li>
                                        <li>‚Ä¢ <strong>Empr√©stimos:</strong> controle de prazos e multas</li>
                                        <li>‚Ä¢ <strong>Devolu√ß√µes:</strong> atualiza√ß√£o autom√°tica de status</li>
                                        <li>‚Ä¢ <strong>Consultas:</strong> por t√≠tulo, autor, categoria, disponibilidade</li>
                                        <li>‚Ä¢ <strong>Relat√≥rios:</strong> livros mais emprestados, usu√°rios ativos</li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="space-y-6">
                                <div class="bg-purple-50 rounded-lg p-6 border border-purple-200">
                                    <h4 class="font-semibold text-purple-800 mb-4">Regras de Neg√≥cio:</h4>
                                    <ul class="text-sm text-purple-700 space-y-2">
                                        <li>‚Ä¢ <strong>Prazo de Empr√©stimo:</strong> 15 dias para alunos, 30 para professores</li>
                                        <li>‚Ä¢ <strong>Limite de Livros:</strong> 3 para alunos, 5 para professores</li>
                                        <li>‚Ä¢ <strong>Multa por Atraso:</strong> R$ 1,00 por dia</li>
                                        <li>‚Ä¢ <strong>Renova√ß√£o:</strong> m√°ximo 2 vezes se n√£o h√° fila</li>
                                        <li>‚Ä¢ <strong>Reserva:</strong> sistema de fila de espera</li>
                                    </ul>
                                </div>
                                
                                <div class="bg-amber-50 rounded-lg p-6 border border-amber-200">
                                    <h4 class="font-semibold text-amber-800 mb-4">Interface do Sistema:</h4>
                                    <ul class="text-sm text-amber-700 space-y-2">
                                        <li>‚Ä¢ Menu principal bem estruturado</li>
                                        <li>‚Ä¢ Submenu para cada funcionalidade</li>
                                        <li>‚Ä¢ Mensagens de erro claras</li>
                                        <li>‚Ä¢ Confirma√ß√µes para opera√ß√µes cr√≠ticas</li>
                                        <li>‚Ä¢ Formata√ß√£o adequada de relat√≥rios</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        
                        <div class="bg-red-50 border border-red-200 rounded-lg p-6">
                            <h4 class="font-semibold text-red-800 mb-4 flex items-center">
                                <span class="text-2xl mr-3">üìã</span>
                                Entreg√°veis do Projeto
                            </h4>
                            <div class="grid md:grid-cols-3 gap-6">
                                <div>
                                    <h5 class="font-semibold text-red-700 mb-2">1. C√≥digo Fonte</h5>
                                    <ul class="text-sm text-red-600 space-y-1">
                                        <li>‚Ä¢ Todas as classes implementadas</li>
                                        <li>‚Ä¢ C√≥digo bem comentado</li>
                                        <li>‚Ä¢ Valida√ß√µes funcionando</li>
                                        <li>‚Ä¢ Interface completa</li>
                                    </ul>
                                </div>
                                <div>
                                    <h5 class="font-semibold text-red-700 mb-2">2. Documenta√ß√£o</h5>
                                    <ul class="text-sm text-red-600 space-y-1">
                                        <li>‚Ä¢ Diagrama de classes</li>
                                        <li>‚Ä¢ Manual do usu√°rio</li>
                                        <li>‚Ä¢ Casos de teste</li>
                                        <li>‚Ä¢ Relat√≥rio de desenvolvimento</li>
                                    </ul>
                                </div>
                                <div>
                                    <h5 class="font-semibold text-red-700 mb-2">3. Apresenta√ß√£o</h5>
                                    <ul class="text-sm text-red-600 space-y-1">
                                        <li>‚Ä¢ Demonstra√ß√£o ao vivo</li>
                                        <li>‚Ä¢ Explica√ß√£o do c√≥digo</li>
                                        <li>‚Ä¢ Defesa das escolhas t√©cnicas</li>
                                        <li>‚Ä¢ Tempo: 15 minutos</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
	}

	details.classList.remove("hidden");
}

function hideProjectDetails() {
	document.getElementById("projectDetails").classList.add("hidden");
}

// Initialize
document.addEventListener("DOMContentLoaded", () => {
	initializeSlides();
	updateSlidePosition();
	updateSlideIndicators();
	updateSlideCounter();
	updateProgress();
	loadQuestion();
});
